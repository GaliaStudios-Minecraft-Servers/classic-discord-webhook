name: Discord Webhook (tsickert)

on: [push]

jobs:
  Discord_notification:
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Checkout del repositorio con el historial completo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Paso 2: Preparamos el contenido del mensaje de forma din치mica
      - name: Prepare Discord Message
        id: prep_message
        run: |
          COMMITS_JSON='${{ toJSON(github.event.commits) }}'
          DESCRIPTION_TEXT=""
          for sha in $(echo "$COMMITS_JSON" | jq -r '.[].id'); do
            COMMIT_MESSAGE=$(git log --format=%s -n 1 "$sha")
            COMMIT_AUTHOR=$(git log --format=%an -n 1 "$sha")
            DESCRIPTION_TEXT+=$(printf "九꽲잺 **%s** - *%s*\\n" "$COMMIT_MESSAGE" "$COMMIT_AUTHOR")
            FILE_CHANGES=$(git show --name-status --pretty="" "$sha" | awk '{
              if ($1 == "A") { print "+ " $2 }
              else if ($1 == "D") { print "- " $2 }
              else { print "M " $2 }
            }')
            if [[ -n "$FILE_CHANGES" ]]; then
              DESCRIPTION_TEXT+=$(printf '```diff\n%s\n```\n' "$FILE_CHANGES")
            fi
          done
          echo "description<<EOF" >> $GITHUB_OUTPUT
          echo "$DESCRIPTION_TEXT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # Paso 3: Enviar la notificaci칩n con la acci칩n tsickert/discord-webhook
      - name: Send Discord Webhook
        uses: tsickert/discord-webhook@v7.0.0
        with:
          # Pasamos la URL del webhook
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          
          # Pasamos el nombre y avatar que queremos que muestre el bot
          username: "GitHub"
          avatar-url: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
          
          # El par치metro clave: pasamos el array de embeds en formato JSON
          embed-json: |
            [{
              "title": "游닍 Push a `${{ github.ref_name }}` (${{ github.event.commits_count }} nuevos commits)",
              "description": "${{ steps.prep_message.outputs.description }}",
              "color": 3447003,
              "author": {
                "name": "${{ github.actor }}",
                "url": "https://github.com/${{ github.actor }}",
                "icon_url": "https://github.com/${{ github.actor }}.png"
              },
              "timestamp": "${{ toJSON(job.started_at) }}"
            }]