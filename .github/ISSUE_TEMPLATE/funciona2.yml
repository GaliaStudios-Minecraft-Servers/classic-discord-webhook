name: Discord Webhook (Final Corrected)

on: [push]

jobs:
  Discord_notification:
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Checkout (No cambia)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Paso 2: Preparar Mensaje (CORREGIDO)
      - name: Prepare Discord Message
        id: prep_message
        run: |
          COMMITS_JSON='${{ toJSON(github.event.commits) }}'
          DESCRIPTION_TEXT=""
          for sha in $(echo "$COMMITS_JSON" | jq -r '.[].id'); do
            COMMIT_MESSAGE=$(git log --format=%s -n 1 "$sha")
            COMMIT_AUTHOR=$(git log --format=%an -n 1 "$sha")
            DESCRIPTION_TEXT+=$(printf "‚úçÔ∏è **%s** - *%s*\\n" "$COMMIT_MESSAGE" "$COMMIT_AUTHOR")
            
            # Capturamos toda la lista de archivos formateada en una variable
            CHANGES_BLOCK=$(
              git show --name-status --pretty="" "$sha" | while read -r status file; do
                # L√≥gica para el emoji de ESTADO (las barras)
                # Sustituye aqu√≠ los placeholders por los c√≥digos de TUS emojis
                status_emoji="<:Building:1348393344081985667>" # Modificado
                case "$status" in
                  A) status_emoji="<:Config:1348231530681733173>" ;;
                  D) status_emoji=" <:Design:1348393339371655209>" ;;
                esac

                # L√≥gica para el emoji de TIPO DE ARCHIVO
                file_emoji="<:archivo_defecto:0>" # Por defecto
                case "$file" in
                  *.java)     file_emoji="<:Dev:1348393341385183375>" ;;
                  *.yml)      file_emoji="<:Documentation:1348234844131430400>" ;;
                  *.pom)      file_emoji="<:Like:1348235297753927742>" ;;
                  *.xml)      file_emoji="<:Setup:1348231535165444116>" ;;
                esac

                # ‚úÖ CORRECCI√ìN: Usamos 'basename' para obtener solo el nombre del archivo
                filename=$(basename "$file")

                # ‚úÖ CORRECCI√ìN: Construimos cada l√≠nea de forma individual
                printf "%s %s %s\\n" "$status_emoji" "$file_emoji" "$filename"
              done
            )

            # Si hubo cambios, a√±adimos el bloque completo a la descripci√≥n
            if [[ -n "$CHANGES_BLOCK" ]]; then
              DESCRIPTION_TEXT+=$CHANGES_BLOCK
              DESCRIPTION_TEXT+=$(printf "\\n") # A√±ade un espacio extra entre commits
            fi
          done

          echo "description<<EOF" >> $GITHUB_OUTPUT
          echo "$DESCRIPTION_TEXT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # Paso 3: Enviar Webhook (No cambia)
      - name: Send Discord Webhook
        uses: tsickert/discord-webhook@v7.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          username: "GitHub"
          avatar-url: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
          embed-title: "üì¶ Push a `${{ github.ref_name }}` (${{ github.event.commits_count }} nuevos commits)"
          embed-description: ${{ steps.prep_message.outputs.description }}
          embed-color: "3447003"
          embed-timestamp: ${{ job.started_at }}
          embed-author-name: ${{ github.actor }}
          embed-author-url: "https://github.com/${{ github.actor }}"
          embed-author-icon-url: "https://github.com/${{ github.actor }}.png"